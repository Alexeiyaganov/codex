module.exports = (function () {

    const CodexEditor = require('codex.editor');

    /**
     * JSON preview for Editor's demo
     */
    const cPreview = require('./modules/json-preview');

    /**
     * Editor's demo save button
     * @type {HTMLElement}
     */
    let saveButton = document.getElementById('saveButton');

    /**
     * Load Tools for the Editor
     */
    const Header = require('codex.editor.header');
    const SimpleImage = require('codex.editor.simple-image');
    const Quote = require('codex.editor.quote');
    const Marker = require('codex.editor.marker');
    const CodeTool = require('codex.editor.code');
    const Delimiter = require('codex.editor.delimiter');
    const InlineCode = require('codex.editor.inline-code');
    const List = require('codex.editor.list');

    /**
     * Initialize CodeX Editor
     */
    let editor = new CodexEditor({
        /**
         * Wrapper of Editor
         */
        holderId: 'codex-editor',

        /**
         * Tools list
         */
        tools: {
            /**
             * Each Tool is a Plugin. Pass them via 'class' option with necessary settings {@link docs/tools.md}
             */
            header: {
                class: Header,
                inlineToolbar: [ 'link' ],
                config: {
                    placeholder: 'Header'
                }
            },

            /**
             * Or pass class directly without any configuration
             */
            image: SimpleImage,

            list: {
                class: List,
                inlineToolbar: true
            },

            quote: {
                class: Quote,
                inlineToolbar: true,
                config: {
                    quotePlaceholder: 'Enter a quote',
                    captionPlaceholder: 'Quote\'s author',
                },
            },

            marker: {
                class:  Marker,
                shortcut: 'CMD+SHIFT+M'
            },

            code: {
                class:  CodeTool,
                shortcut: 'CMD+SHIFT+D'
            },

            delimiter: Delimiter,

            inlineCode: {
                class: InlineCode,
                shortcut: 'CMD+SHIFT+C'
            },
        },

        /**
         * Initial Editor data
         */
        data: {
            blocks: [
                {
                    type: 'header',
                    data: {
                        text: 'CodeX Editor',
                        level: 2
                    }
                },
                {
                    type : 'paragraph',
                    data : {
                        text : '–ü—Ä–∏–≤–µ—Ç. –ü–µ—Ä–µ–¥ –≤–∞–º–∏ –Ω–∞—à –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä. –ù–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ –≤ –¥–µ–π—Å—Ç–≤–∏–∏ ‚Äî –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª. –ö–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –ø—Ä–æ—Å—Ç–µ–π—à–µ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.'
                    }
                },
                {
                    type: 'header',
                    data: {
                        text: '–û —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ',
                        level: 3
                    }
                },
                {
                    type : 'list',
                    data : {
                        items : [
                            '–≠—Ç–æ –±–ª–æ—á–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä',
                            '–ù–∞ –≤—ã–≤–æ–¥–µ –æ—Ç–¥–∞–µ—Ç —á–∏—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ',
                            '–ò–º–µ–µ—Ç –≥–∏–±–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø—Ä–æ—Å—Ç–æ–π API',
                        ],
                        style: 'unordered'
                    }
                },
                {
                    type: 'header',
                    data: {
                        text: '–ß—Ç–æ –∑–Ω–∞—á–∏—Ç ¬´–±–ª–æ—á–Ω—ã–π¬ª —Ä–µ–¥–∞–∫—Ç–æ—Ä',
                        level: 3
                    }
                },
                {
                    type : 'paragraph',
                    data : {
                        text : '–ë–ª–æ–∫–∏ ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Å—Ç–æ–∏—Ç —Å—Ç–∞—Ç—å—è. –ù–∞–ø—Ä–∏–º–µ—Ä <span class="inline-code">–ü–∞—Ä–∞–≥—Ä–∞—Ñ</span>, <span class="inline-code">–ó–∞–≥–æ–ª–æ–≤–æ–∫</span>, <span class="inline-code">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</span>, <span class="inline-code">–í–∏–¥–µ–æ</span> ‚Äî —ç—Ç–æ –≤—Å–µ –ë–ª–æ–∫–∏. –í CodeX Editor –∫–∞–∂–¥—ã–π –ë–ª–æ–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–ª–∞–≥–∏–Ω–æ–º. –ï—Å—Ç—å –º–Ω–æ–≥–æ –≥–æ—Ç–æ–≤—ã—Ö –ë–ª–æ–∫–æ–≤ –∏ –ø—Ä–æ—Å—Ç–æ–π API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –ë–ª–æ–∫ –¥–ª—è –¢–≤–∏—Ç—Ç–µ—Ä–∞, –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–∞, –û–ø—Ä–æ—Å–∞, –ò–≥—Ä—ã –∏–ª–∏ CTA-–∫–Ω–æ–ø–∫–∏.'
                    }
                },
                {
                    type: 'header',
                    data: {
                        text: '–ß—Ç–æ –∑–Ω–∞—á–∏—Ç ¬´—á–∏—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ¬ª',
                        level: 3
                    }
                },
                {
                    type : 'paragraph',
                    data : {
                        text : '–í –æ—Ç–ª–∏—á–∏–µ –æ—Ç WYSIWYG-—Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤, CodeX Editor –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML-–∫–æ–¥, –≤–∫–ª—é—á–∞—é—â–∏–π –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏, –∞ JSON —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –∫–∞–∂–¥–æ–º –ë–ª–æ–∫–µ. –ü—Ä–∏–º–µ—Ä —Ç–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω–∏–∑—É —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.'
                    }
                },
                {
                    type : 'paragraph',
                    data : {
                        text : '–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ —É–≥–æ–¥–Ω–æ: –≤—ã–≤–æ–¥–∏—Ç—å –≤ –≤–µ–±–µ, —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –≤ –Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö, –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ Instant Articles –∏–ª–∏ Google AMP, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ-–≤–µ—Ä—Å–∏–∏ –∏ —Ç–¥.'
                    }
                },
                {
                    type : 'paragraph',
                    data : {
                        text : '–ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ, –¥–∞–Ω–Ω—ã–µ –æ –ë–ª–æ–∫–∞—Ö —É–¥–æ–±–Ω–æ –æ—á–∏—â–∞—Ç—å, —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –±—ç–∫–µ–Ω–¥–µ.'
                    }
                },
                {
                    type: 'image',
                    data: {
                        url : 'https://ifmo.su/upload/redactor_images/o_e48549d1855c7fc1807308dd14990126.jpg',
                        caption: '',
                        stretched: false,
                        withBorder: true,
                        withBackground: false,
                    }
                },
                {
                    type : 'delimiter',
                    data : {}
                },
                {
                    type : 'paragraph',
                    data : {
                        text : '–ú—ã —Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–∞–¥ —ç—Ç–∏–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º –±–æ–ª–µ–µ –¥–≤—É—Ö –ª–µ—Ç. –í –æ—Ç–ª–∞–¥–∫–µ –ø—Ä–∏–Ω–∏–º–∞–ª–∏ —É—á–∞—Å—Ç–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –º–µ–¥–∏–∞-–ø—Ä–æ–µ–∫—Ç—ã: vc.ru, TJ, DTF ‚Äî —Å –∏—Ö –ø–æ–º–æ—â—å—é —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –º–Ω–æ–≥–æ –æ—à–∏–±–æ–∫, —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —è–¥—Ä–æ. –í–º–µ—Å—Ç–µ —Å —ç—Ç–∏–º –º—ã —Ä–∞–∑–≤–∏–≤–∞–ª–∏ API, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–ª–∞–≥–∏–Ω—ã –ø–æ–¥ –ª—é–±—ã–µ –∑–∞–¥–∞—á–∏. –ù–∞–¥–µ–µ–º—Å—è, –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è üòè'
                    }
                },
            ]
        },
        onReady: function () {

            saveButton.click();

        }
    });

    /**
     * Saving example
     */

    saveButton.addEventListener('click', function () {

        editor.saver.save().then((savedData) => {

            cPreview.show(savedData, document.getElementById('output'));

        });

    });

}({}));
